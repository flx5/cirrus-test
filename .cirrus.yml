task:
  trigger_type: manual
  container:
    image: openjdk:8-jdk
  test_script: java -version

task:
    macos_instance:
      matrix:
        # System Integrity Protection is disabled on big-sur-xcode-12.5 https://github.com/cirruslabs/cirrus-ci-docs/issues/773
        - image: big-sur-base
        #- image: big-sur-xcode-12.3
        #- image: catalina-xcode-12.2
        
    test_script: 
      - ls $CIRRUS_WORKING_DIR
      # Check that System Integrity Protection is enabled
      - csrutil status
      #- csrutil status | grep enabled
      #- exit 1
    setup_script:
      - git clone https://github.com/webcamoid/akvirtualcamera.git
      - mkdir akvirtualcamera/build
      - cd akvirtualcamera/build
      - cmake  -DCMAKE_BUILD_TYPE=Release .. 
      - cmake --build .
    setup_camera_script:
      # - ./cmio/Assistant/AkVCamAssistant &
      # TODO Grab output from below command and use that instead of hardcoded AkVCamVideoDevice0
      - DEV_NAME=$($CIRRUS_WORKING_DIR/akvirtualcamera/build/Manager/AkVCamManager add-device TestDevice)
      - echo "Device name is $DEV_NAME"
      - $CIRRUS_WORKING_DIR/akvirtualcamera/build/Manager/AkVCamManager add-format AkVCamVideoDevice0 YUY2 640 480 30
      - $CIRRUS_WORKING_DIR/akvirtualcamera/build/Manager/AkVCamManager update
    setup_ffmpeg_script:
      # Ffmpeg is only required for testing
      - brew install ffmpeg
      - brew install coreutils
    grab_picture_script:
      - ffmpeg -f avfoundation -list_devices true -i "" || true
      #- timeout 5s ffmpeg -f avfoundation -i "0" -frames 1 capture.jpg
    image_artifacts:
      path: ./akvirtualcamera/build/capture.jpg
      
    

task:
  trigger_type: manual
  windows_container:
    image: cirrusci/windowsservercore:2019
  # Must be done in one script otherwise the PATH variable is lost.
  build_script: 
    - choco install -y openjdk8jre
    - refreshenv
    - java -version
